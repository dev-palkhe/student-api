services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=devasheesh
      - POSTGRES_PASSWORD=devasheesh
      - POSTGRES_DB=student_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Host:Container (Standard PostgreSQL port)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devasheesh -d student_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  app1: # First Go application
    build: .
    ports:
      - "8081:8080" # Host 8081 maps to Container 8080
    environment:
      - DATABASE_URL=postgres://devasheesh:devasheesh@db:5432/student_db?sslmode=disable
      - PORT=8080 # App listens on 8080 INSIDE container
      - INSTANCE_NAME=app1
    depends_on:
      - db

  app2: # Second Go application
    build: .
    ports:
      - "8082:8080" # Host 8082 maps to Container 8080
    environment:
      - DATABASE_URL=postgres://devasheesh:devasheesh@db:5432/student_db?sslmode=disable
      - PORT=8080 # App listens on 8080 INSIDE container
      - INSTANCE_NAME=app2
    depends_on:
      - db

  nginx: # Nginx load balancer
    image: nginx:latest
    ports:
      - "80:80" # Host port 80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app1
      - app2

volumes:
  postgres_data: